/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.11
 * Generated at: 2023-07-28 08:05:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import jakarta.servlet.http.*;

public final class hireTalent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"ISO-8859-1\">\r\n");
      out.write("	<title>Job Application System</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"hireTalent.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://unicons.iconscout.com/release/v4.0.0/css/line.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

		// Retrieve values from the session
	    HttpSession s = request.getSession();
		Statement statement = (Statement) s.getAttribute("statement");
	    
		String query = null;
		String year = request.getParameter("search");
	
		if(year == null) {
			query = "SELECT * FROM jobApplication";
		}
		else {
			query = "SELECT * FROM jobApplication WHERE experience=" + year;
		}
		
		ResultSet rs = statement.executeQuery(query);
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	 <!-- navigation bar -->\r\n");
      out.write("    <nav>\r\n");
      out.write("        <input type=\"checkbox\" id=\"check\">\r\n");
      out.write("        <label for=\"check\" class=\"checkbtn\">\r\n");
      out.write("            <i class=\"fas fa-bars\"></i>\r\n");
      out.write("        </label>\r\n");
      out.write("        <label class=\"logo\"><a href=\"home.jsp\" style=\"color: white\">Job App</a></label>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li><a href=\"home.jsp\">Home</a></li>\r\n");
      out.write("            <li><a href=\"hireTalent.jsp\">Refresh</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <!-- search bar  -->\r\n");
      out.write("    <div class=\"input-box\">\r\n");
      out.write("        <i class=\"uil uil-search\"></i>\r\n");
      out.write("         <form action=\"hireTalent.jsp\">\r\n");
      out.write("        	<input type=\"text\" placeholder=\"search by years of experience...\" name=\"search\" style=\"margin: 25px;\"/>\r\n");
      out.write("            <button type=\"submit\" class=\"button\">Search</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- job cards -->\r\n");
      out.write("    <section>\r\n");
      out.write("        <div class=\"cards\">\r\n");
      out.write("        	");
 while(rs.next()) { 
      out.write("\r\n");
      out.write("            <div class=\"card\">\r\n");
      out.write("                <div class=\"container\">\r\n");
      out.write("                    <img src=\"1.jpg\" alt=\"job picture\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"details\">\r\n");
      out.write("                    <h2 style=\"text-align: center;\">");
      out.print( rs.getString(2));
      out.write("</h2>\r\n");
      out.write("	                <p>description: ");
      out.print( rs.getString(3));
      out.write("</p>\r\n");
      out.write("	                <h3>years of experience: ");
      out.print( rs.getInt(4) );
      out.write(" year</h3>\r\n");
      out.write("	                <p>skills: ");
      out.print( rs.getString(5) );
      out.write("</p>\r\n");
      out.write("	                <h3 style=\"text-align: center;\">Job ID: ");
      out.print( rs.getInt(1) );
      out.write("</h3>\r\n");
      out.write("                </div> \r\n");
      out.write("                \r\n");
      out.write("                <!-- delete option -->\r\n");
      out.write("                <form action=\"deleteServlet.jsp\" method=\"post\" class=\"delete-form\" style=\"\r\n");
      out.write("                	    display: flex;\r\n");
      out.write("					    justify-content: center;\r\n");
      out.write("					    align-items: center;\r\n");
      out.write("					    margin: 32px 0;\">\r\n");
      out.write("				    <input type=\"hidden\" name=\"jobId\" value=\"");
      out.print( rs.getInt(1) );
      out.write("\"/>\r\n");
      out.write("				    <input type=\"submit\" value=\"delete\" class=\"delete-btn\" style=\"\r\n");
      out.write("				    	cursor: pointer;\r\n");
      out.write("					    font-size: 1.3rem;\r\n");
      out.write("					    padding: 11px 20px;\r\n");
      out.write("					    border: none;\r\n");
      out.write("					    outline: none;\r\n");
      out.write("					    background-color: black;\r\n");
      out.write("					    color: wheat;\r\n");
      out.write("					    font-weight: 800;\r\n");
      out.write("					    text-transform: uppercase;\">\r\n");
      out.write("				</form>\r\n");
      out.write("            </div>\r\n");
      out.write("        	");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
